Программа для автоматизации работы таксопарка.
Позволяет хранить и обрабатывать данные о водителях, автомобилях, и заказах.
Выполняем задание поэтапно.
Сначала читаем внимательно условие, задаем учтоняющие вопросы.
После реализации каждого из пронумерованных пунктов - пушим код в гитхаб и делаем код ревью.
Весь код должен быть покрыт тестами.

1. Реализовать сущность Driver. Имеет следующие поля:
- full_name
- gender
- driving_since
- rating

2. Реализовать сущность Car
- model
- type
- number

3. Машины могут быть разных типов, например легковая вмещает 3 пассажира, микроавтобус 7, грузовик позволяет перевозить крупные грузы, а некоторые легковые машины также имеют детское кресло.
При создании заказа возможно указать необходимые опции, чтобы таксопарк выбрал подходящую машину.
Поэтому для каждого из типов машины необходимо реализовать дочерний класс, наследуемый от Car.
Подклассы содержат методы, позволяющие проверить выполнение необходимого условия, например:
class Bus < Car
  def can_take_passengers?(number)
    ...
  end
end
Соответственно микроавтобус может перевозить до 7 пассажиров. А легковое авто только до 3х.

4. Так как на разных машинах могут ездить разные водители, то необходима сущность, связывающая водителя и машину в данный момент времени. Это должен быть простой класс, в котором два поля:
- driver
- car
- status(idle/busy)

5. Также необходима сущность заказ. Она должна принимать набор опций, которые требуются для поиска подходящей машины и водителя.
- created_at
- passengers_count
- has_children
- has_cargo
- address_from
- address_to
- assigned_taxi

6. Для хранения коллекций каждой из сущностей необходимы соответсвующие классы.
DriversCollection
CarsCollection
WorkingDriversCollection
OrdersCollection
Эти классы позволяют искать, добавлять и удалять объекты из коллекции.

7. Для управления всем таксопарком необходимо основной класс TaxiStation.
- Таксопарк позволяет получать заказы и возвращает в ответ информацию о назначенном водителе и машине.
- Если на основе полученных данных заказа не найдено машины, то должно бросаться исключение с соответсвующим текстом.
- При поиске доступных машин, необходимо выбирать машину, у водителя которой максимальный рейтинг.
- Когда водителю назначен заказ - в объекте связывающем машину и водителя статус должен поменяться с idle на busy.
- А в объекте заказа в поле assigned_taxi должен быть присвоен соответствующий объект.
- Таксопарк должен позволять посмотреть все заказы в нужном статусе(отклонен\принят)

8. Таксопарк позволяет собрать статистику о заказах
- Среднее количество пассажиров
- Процент заказов, требующих детское кресло
- Процент заказов для перевозки грузов
- Процент отклоненных заказов.